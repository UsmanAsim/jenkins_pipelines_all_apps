pipeline {
    agent any
    tools {
        maven 'maven'
        jdk 'java11'
   }
    stages {

        stage('Build') {
            steps {
               // sh 'mvn -version'
                sh 'mvn clean install'
                sh 'mvn clean package'
               // sh 'mvn clean package -Dmaven.test.failure.ignore=true'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
                //sh 'mvn test -Dmaven.test.failure.ignore=true'
            }
        }
        
        stage('Publishing Junit Tests report ') {
            steps {
                junit 'target/surefire-reports/*.xml'
            }   
        }
        stage('Publishing Code Coverage') {
            steps {
                jacoco()
            }   
        }      
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh '''
                        mvn clean verify sonar:sonar -Dsonar.projectKey=java-app -Dsonar.host.url=http://20.62.168.141:9000 -Dsonar.login=sqp_82d6f48af055e12f9fa202414b1039e060055551
                    '''
                 }
             }
         }
        stage('Check Quality Gate') {
            steps {
                script {
                    def qualityGate = waitForQualityGate()
                    if (qualityGate.status != 'OK') {
                        error "Quality gate failed: ${qualityGate.status}"
                    }
                    else {
                        echo "Quality gate passed: ${qualityGate.status}"
                    }
                    
                }
            }
        }
          
    }
}
